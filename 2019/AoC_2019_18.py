from heapq import *
R = 9; C = 17
# data = \
#     '#################################################################################' \
#     '#.........#.........#...#..q#.....#.....#.................#..........e......#...#' \
#     '#####.###.###.#####.#.#.#.#.#.###.#.###.#.#####.#.#######.###############.#.###.#' \
#     '#.....#..i....#...#.#.#.#.#.#.#.#.#.#.#.#.....#.#.#....z#.....C.........#.#.....#' \
#     '#.###.###########.#.#.###.#.#.#.#.#.#.#.#####.#.#.#.###.###############.#.#####.#' \
#     '#...#.#.........#.#.#...#.#.....#d#.#j..#.....#.#.#.#...#.........#.....#...#...#' \
#     '###.###.#####.#.#.#.###.#.#######.#.###.#.#####.#.#.#.###.#######.#####.###.#.###' \
#     '#...#...#...#.#.#.......#.#.#.....#...#.#.#.#...#.#.#.#.........#.#...#.....#...#' \
#     '#.###.###.#.###.#######.#.#.#.#####.#.###.#.#.###.#.#.#.#######.#.#.#.#########.#' \
#     '#...#.#...#.....#...#...#...#.#...#.#...#...#.#...#.#...#...#...#...#.#.....#...#' \
#     '#.#.#.#.#.#####.#.#.#######.#.###.#.###.#.###K#####.#####.#.#########.#.#####.###' \
#     '#.#...#.#.#...#.#.#.........#...#.#...#.#.#...#...#.....#.#.#........v#.......#.#' \
#     '#.#####.###.#.#.#.###########.#.#.###.#N#.#.###.#.#####.#L#.#.#############.###.#' \
#     '#.#...#.....#.#.#.#...#.....#.#.#.#...#.#.#.#...#.....#.#.#.#.....#.......#.....#' \
#     '#.#.#.#######.###.#.###.###.###.#.#.###.###.#.#######.#.#.#.#.###.#.#####.#####.#' \
#     '#.#.#.......#.....#...#.#.......#.#...#.#...#...#.S.#.#.#.#.#...#.#....y#.#.#...#' \
#     '#.#.#####.#.#########.#.#########.#.###.#.#.###.#.#.#.#.#.#G#####.#####.#.#.#.###' \
#     '#.#.....#.#.#.........#.W.#.....#.#.#...#.#.#...#.#.#...#.#.#.......#...#.#...#.#' \
#     '#.#######.#.###.###.#####.#.#.#.#.#.#.#.#.###.###.#.#.###.#.#.#####.#T###.#.###.#' \
#     '#.......#.#.....#.#.#.....#.#.#.#...#.#.#.#...#...#.#...#.#.#.....#.#...#.#.#...#' \
#     '#######.#.#######.#.#.#######.#.#.###.###.#.###.###.#####.#.#####.#####.#.#.#.#.#' \
#     '#.#.....#.#.......#.#.#.....#.#.#...#...#...#.#.#.#.......#.#...#.......#.#...#.#' \
#     '#.#.#####.#.#.###.#.###.###.#.#.#####.#.#.###.#.#.#########.###.#######.#.#####.#' \
#     '#...#.....#r#...#.#.....#.#...#.....#.#.#.....#.....A.#...#..p..#.....#.#.#.....#' \
#     '#.#####.#######.#########.#########.###.#####.#######.#.#########.###.###.#####.#' \
#     '#.......#.....#.......#...#.......#...#.#.#...#.....#.#.......H...#.....#.....#.#' \
#     '###########.#.###.#####.#.#.#####.###.#.#.#.###.#.#.#.#####.#.#########.###.#.###' \
#     '#.........#.#.....#.....#.#.....#...#...#.#...#.#.#.#.#...#.#.......#.#...#.#...#' \
#     '#.#######.#.#####.#.#####.#####.###.###.#.###.###.###.#.#M###.#####.#.###.#####R#' \
#     '#...#...#.#.....#.#.#...#.....#.#.#...#.#...#...#...#...#...#...#...#...#...#...#' \
#     '###.#.#.#.#####.###.#.#######.#.#.#.###.#.#.###.###.#######.###.#.###.#.###.#.###' \
#     '#...#.#...#...#.#...#.......#.....#.#...#.#.#...#...#.....#...#.#...#.#.#...#...#' \
#     '#.#######.#.#.#.#.###.#####.#######.#O###.###.###.###.###.###.#.###.#.#.#.#####.#' \
#     '#.#.....#.#.#...#...#.#.#.......#...#...#.....#...#...#.#.#...#.#.#.#.#.#.....#.#' \
#     '#.#.###.#.#.#.#####.#.#.#.#.#####.#####.#.#######.#.###.#.#.###.#.#B###.#####.#.#' \
#     '#.#.#...#...#.#.....#...#.#.#...#.#.....#.....#...#...#.#...#.....#...#.....#.#.#' \
#     '#.#E#.#########.#####.###.#.#.#.#.#.#########.#.#####.#.#############.#.#####.#.#' \
#     '#...#.#.......#.....#.#...#.#.#...#.#...#...#.#.#.....#.....#.......#.#.......#.#' \
#     '#.###.#.#####.#####.###.###.#.#####.###.#.#.#.#.#.#####.###.#.#####.#.#.#######.#' \
#     '#...#.......#...........#...#.............#.....#.......#.....#......x#.........#' \
#     '#######################################.@.#######################################' \
#     '#.......#.......#.....................#.......#...#...#.....#.......#...#.......#' \
#     '#.#######.#####.#.#.#################.#.#####.#.#.#.#.#.###.#.#####.#.#.#.###.#.#' \
#     '#...#.....#...#...#.....#.......#.....#.#...#...#.#.#...#.#.#.#...#...#...#...#.#' \
#     '#.#.#.#####.#.#########.#.###.###.#####.#.#.###.#.#.#####.#.#.#.###########.###.#' \
#     '#.#.#.......#.......#...#...#...#.....#.#.#...#.#.#.#.....#...#.......#.#...#...#' \
#     '#.#.#####.#####.#####.#########.#####.#.#.###.###.#.#.#.#########.###.#.#.###.###' \
#     '#.#...#...#...#.#.....#...........#...#.#.#.#.#...#.#.#...........#.....#...#...#' \
#     '#####.#.###.#.###.#####.#.#.#######.###.#.#.#.#.#.#.#.#######.#.#########.#.###.#' \
#     '#.....#.#...#.....#.....#.#.#....o......#k#...#.#.#.#.#.......#.#.......#.#...#.#' \
#     '#.#####.#.#############.#.###.#########.#.###.#.#.#.#.#.#######.#.#####.#####.#.#' \
#     '#..c....#.#.....#.....#.#.......#.....#.#...#n..#.#.#.#...#.#...#...#.....#...#.#' \
#     '#.#####.#.#.###.#.###.#######.###.###.#.#.#.#######.#####.#.#.#####.#####.#.#####' \
#     '#.#...#.#.....#.....#.#f....#.#...#...#.#.#...#...#.......#.#.#.#...#..u#.#.....#' \
#     '###.#.###############.#.###.#.#.#####.#.#####.#.#.#########.#.#.#.#.#.#.#.#.###.#' \
#     '#...#.#...............#...#.#.#.....#.#.#...#.#.#...#.......#...#.#.#.#.#.#.#...#' \
#     '#.###.#.#######Z#########.#.#.#####.#.#.#.#.#.#.#.###.#.#######.#.###.#.#.###.###' \
#     '#...#...#.......#...#.....#.#.#.....#.#.#.#.#.#.#.....#.....#...#.....#.#...#...#' \
#     '#.#.###.#########.#.#.#####.###.#####.###.#.#.#.#######.###.#.#########.###.#.#.#' \
#     '#.#...#.#.........#.#.#...#...U.#...#...#.#...#.#.....#...#.......#.#...#...#.#.#' \
#     '#.###.###.#########.#.#.###########.###.#.#.###.#.###.###########.#.#.###.#####.#' \
#     '#.#.#.#.V.#.....#...#.#.............#...#.#.#...#.#...#.P.....#...#.#.#...#....w#' \
#     '#.#.#.#.###.#.###.#.#############.#.#.###.###.###.#.###.#######.###.#.#.###.#####' \
#     '#...#...#...#.#...#.#.....#.......#.#...#...#...#.#.....#.....#.#...#.#...#.....#' \
#     '###.#####.###.#.###.#.###.#.###########.#.#J###.#.#########.#.#.#.###.###.###.#.#' \
#     '#.#...#.....#.#.#...#.#.....#.......#...#.#.....#.#.....#...#.#.#...#...#...#.#.#' \
#     '#.###.#####.###.#.###.#######.#####.#.###.#######.#.#.#.#.###.#.###.###.###.###.#' \
#     '#...#.......#...#.....#.......#...#...#.#.#...#...#s#.#.#a#...#.....#...#.#.....#' \
#     '#.###.#######.#####.###.#######.#.#####.#.#.#.#.#####.#.#.#.#####.###F###.#####.#' \
#     '#.....#.......#...#.#...#.....#.#.....#.#.#.#.#g..#...#...#.....#.#...#.......#.#' \
#     '#.#####.#######.#.#.#.#####.#.###.###.#.#.#.#####.#.###########.###.###.#######.#' \
#     '#...#.#.....#...#...#.......#...#.#...#.#.#.....#.#.#...#.....#..m..#.......#...#' \
#     '###.#.#####.#.#################.#.#.###.#.#.###.#.#.#.#.#.#.#.#############.#.###' \
#     '#...#.#.....#.#.......#.#.D.....#.#.....#.#...#.#.#.#.#...#.#.....#.......#.#...#' \
#     '#.###.#Y#####.#.#####.#.#.#######.#####.#.#####.#.#.###.###.#######.#.###.#.###.#' \
#     '#.#...#...#.#...#...#...#.....#...#h#...#.......#.#...#...#...#...#.#...#.#...#.#' \
#     '#.#.#.###.#.###.#.#.###.#####.#.###.#.#######.###.#.#.###.###.#.#.#.###.#.#.###.#' \
#     '#.#.#...#.#.....#.#...#.#.....#...#.#.#.#.....#...#.#.#.#.#.#.#.#.#.#.#.#...#...#' \
#     '#I#####.#.#######.###.###Q#######.#.#.#.#.#####.#####.#.#.#.#.#X#.#.#.#.#####.###' \
#     '#t......#...........#.............#.....#.....#....l..#.....#...#.....#..b......#' \
#     '#################################################################################'

data = \
    '#################' \
    '#i.G..c...e..H.p#' \
    '########.########' \
    '#j.A..b...f..D.o#' \
    '########@########' \
    '#k.E..a...g..B.n#' \
    '########.########' \
    '#l.F..d...h..C.m#' \
    '#################'

# data = \
# '########################'\
# '#@..............ac.GI.b#'\
# '###d#e#f################'\
# '###A#B#C################'\
# '###g#h#i################'\
# '########################'
# data = \
# '#######'\
# '#...BA#'\
# '#a#.#.#'\
# '#b#@#.#'\
# '#.##C.#'\
# '####c.#'\
# '#######'

# key_states = {'@': 1, 'a': 1, 'b': 1, 'c': 1, 'd': 1, 'e': 1, 'f': 1, 'g': 1, 'h': 1, 'i': 1, 'j': 1, 'k': 1, 'l': 1,
#               'm': 1, 'n': 1, 'o': 1, 'p': 1, 'q': 1, 'r': 1, 's': 1, 't': 1, 'u': 1, 'v': 1, 'w': 1, 'x': 1, 'y': 1,
#               'z': 1}
key_states = {'@': 1, 'a': 1, 'b': 1, 'c': 1, 'd': 1, 'e': 1, 'f': 1, 'g': 1, 'h': 1, 'i': 1, 'j': 1, 'k': 1, 'l': 1,
              'm': 1, 'n': 1, 'o': 1, 'p': 1}
# key_states = {'@': 1, 'a': 1, 'b': 1, 'c': 1, 'd': 1, 'e': 1, 'f': 1, 'g': 1, 'h': 1, 'i': 1}
# keys_collected = set()
# key_states = {'@': 1, 'a': 1, 'b': 1, 'c': 1}
# path_dict = dict()

# obtained from running fill_dict() on an empty path_dict. Dict keys are pairs of keys; values are tuples of
# (shortest path between the pair of keys, set of doors encountered when traversing that shortest path
path_dict = {('@', 't'): (172, {'I'}), ('@', 'f'): (356, {'Y', 'U', 'V', 'D', 'Q'}), ('@', 'h'): (286, {'V', 'Y'}),
             ('@', 'c'): (90, set()), ('@', 'o'): (18, set()), ('@', 'e'): (126, {'K', 'C'}), ('@', 'z'): (110, set()),
             ('@', 'v'): (148, set()), ('@', 'y'): (194, {'T'}), ('@', 'x'): (320, {'B', 'H', 'R', 'T'}),
             ('@', 'p'): (460, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'L'}), ('@', 'n'): (32, set()),
             ('@', 'k'): (50, set()), ('@', 'w'): (264, {'J'}), ('@', 'b'): (300, {'J'}), ('@', 'u'): (340, {'J'}),
             ('@', 'm'): (368, {'J', 'F'}), ('@', 'a'): (392, {'J', 'F'}), ('@', 'l'): (422, {'J', 'F'}),
             ('@', 'g'): (440, {'J', 'F'}), ('@', 's'): (406, {'J', 'F'}), ('@', 'j'): (70, {'O', 'N'}),
             ('@', 'i'): (156, {'O'}), ('@', 'q'): (224, {'O'}), ('@', 'd'): (242, {'O'}), ('@', 'r'): (210, {'E'}),
             ('a', 'm'): (24, set()), ('a', 'u'): (52, {'F'}), ('a', 'w'): (128, {'F'}), ('a', 'k'): (342, {'J', 'F'}),
             ('a', 'n'): (360, {'J', 'F'}), ('a', 'e'): (506, {'K', 'J', 'F', 'C'}), ('a', 'z'): (490, {'J', 'F'}),
             ('a', 'v'): (528, {'J', 'F'}), ('a', 'y'): (574, {'J', 'F', 'T'}),
             ('a', 'x'): (700, {'B', 'H', 'F', 'R', 'T', 'J'}),
             ('a', 'p'): (840, {'A', 'F', 'S', 'R', 'T', 'M', 'G', 'B', 'H', 'J', 'L'}), ('a', '@'): (390, {'J', 'F'}),
             ('a', 'j'): (462, {'O', 'J', 'N', 'F'}), ('a', 'i'): (548, {'O', 'J', 'F'}),
             ('a', 'q'): (616, {'O', 'J', 'F'}), ('a', 'd'): (634, {'O', 'J', 'F'}), ('a', 'r'): (602, {'J', 'F', 'E'}),
             ('a', 't'): (560, {'J', 'F', 'I'}), ('a', 'f'): (744, {'F', 'Y', 'U', 'J', 'V', 'D', 'Q'}),
             ('a', 'h'): (674, {'Y', 'J', 'F', 'V'}), ('a', 'c'): (478, {'J', 'F'}), ('a', 'o'): (406, {'J', 'F'}),
             ('a', 'b'): (136, {'F'}), ('a', 'l'): (30, set()), ('a', 'g'): (48, set()), ('a', 's'): (14, set()),
             ('b', 'w'): (36, set()), ('b', 'k'): (250, {'J'}), ('b', 'n'): (268, {'J'}),
             ('b', 'e'): (414, {'K', 'J', 'C'}), ('b', 'z'): (398, {'J'}), ('b', 'v'): (436, {'J'}),
             ('b', 'y'): (482, {'J', 'T'}), ('b', 'x'): (608, {'B', 'H', 'R', 'T', 'J'}),
             ('b', 'p'): (748, {'A', 'G', 'S', 'R', 'T', 'M', 'B', 'H', 'J', 'L'}), ('b', '@'): (298, {'J'}),
             ('b', 'j'): (370, {'O', 'J', 'N'}), ('b', 'i'): (456, {'O', 'J'}), ('b', 'q'): (524, {'O', 'J'}),
             ('b', 'd'): (542, {'O', 'J'}), ('b', 'r'): (510, {'J', 'E'}), ('b', 't'): (468, {'J', 'I'}),
             ('b', 'f'): (652, {'Y', 'U', 'J', 'V', 'D', 'Q'}), ('b', 'h'): (582, {'Y', 'J', 'V'}),
             ('b', 'c'): (386, {'J'}), ('b', 'o'): (314, {'J'}), ('b', 'u'): (84, set()), ('b', 'm'): (112, {'F'}),
             ('b', 'a'): (136, {'F'}), ('b', 'l'): (166, {'F'}), ('b', 'g'): (184, {'F'}), ('b', 's'): (150, {'F'}),
             ('c', 't'): (158, {'I'}), ('c', 'f'): (342, {'Y', 'U', 'V', 'D', 'Q'}), ('c', 'h'): (272, {'V', 'Y'}),
             ('c', 'o'): (76, set()), ('c', 'j'): (156, {'O', 'N'}), ('c', 'i'): (242, {'O'}), ('c', 'q'): (310, {'O'}),
             ('c', 'd'): (328, {'O'}), ('c', 'r'): (296, {'E'}), ('c', '@'): (90, set()), ('c', 'e'): (212, {'K', 'C'}),
             ('c', 'z'): (196, set()), ('c', 'v'): (234, set()), ('c', 'y'): (280, {'T'}),
             ('c', 'x'): (406, {'B', 'H', 'R', 'T'}), ('c', 'p'): (546, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'L'}),
             ('c', 'n'): (118, set()), ('c', 'k'): (136, set()), ('c', 'w'): (350, {'J'}), ('c', 'b'): (386, {'J'}),
             ('c', 'u'): (426, {'J'}), ('c', 'm'): (454, {'J', 'F'}), ('c', 'a'): (478, {'J', 'F'}),
             ('c', 'l'): (508, {'J', 'F'}), ('c', 'g'): (526, {'J', 'F'}), ('c', 's'): (492, {'J', 'F'}),
             ('d', 'q'): (18, set()), ('d', 'i'): (130, set()), ('d', 'j'): (260, {'N'}), ('d', 'r'): (440, {'O', 'E'}),
             ('d', 't'): (410, {'O', 'I'}), ('d', 'f'): (594, {'O', 'Y', 'U', 'V', 'D', 'Q'}),
             ('d', 'h'): (524, {'O', 'V', 'Y'}), ('d', 'c'): (328, {'O'}), ('d', 'o'): (256, {'O'}),
             ('d', '@'): (244, {'O'}), ('d', 'e'): (364, {'O', 'K', 'C'}), ('d', 'z'): (348, {'O'}),
             ('d', 'v'): (386, {'O'}), ('d', 'y'): (432, {'O', 'T'}), ('d', 'x'): (558, {'O', 'B', 'H', 'R', 'T'}),
             ('d', 'p'): (698, {'A', 'G', 'S', 'R', 'T', 'M', 'O', 'B', 'H', 'L'}), ('d', 'n'): (274, {'O'}),
             ('d', 'k'): (292, {'O'}), ('d', 'w'): (506, {'O', 'J'}), ('d', 'b'): (542, {'O', 'J'}),
             ('d', 'u'): (582, {'O', 'J'}), ('d', 'm'): (610, {'O', 'J', 'F'}), ('d', 'a'): (634, {'O', 'J', 'F'}),
             ('d', 'l'): (664, {'O', 'J', 'F'}), ('d', 'g'): (682, {'O', 'J', 'F'}), ('d', 's'): (648, {'O', 'J', 'F'}),
             ('e', '@'): (122, {'C', 'K'}), ('e', 't'): (294, {'C', 'K', 'I'}),
             ('e', 'f'): (478, {'K', 'Y', 'U', 'C', 'V', 'D', 'Q'}), ('e', 'h'): (408, {'C', 'K', 'V', 'Y'}),
             ('e', 'c'): (212, {'C', 'K'}), ('e', 'o'): (140, {'C', 'K'}), ('e', 'j'): (192, {'C', 'K', 'N', 'O'}),
             ('e', 'i'): (278, {'C', 'K', 'O'}), ('e', 'q'): (346, {'C', 'K', 'O'}), ('e', 'd'): (364, {'C', 'K', 'O'}),
             ('e', 'r'): (332, {'C', 'K', 'E'}), ('e', 'n'): (146, {'C', 'K'}), ('e', 'k'): (164, {'C', 'K'}),
             ('e', 'w'): (378, {'C', 'K', 'J'}), ('e', 'b'): (414, {'C', 'K', 'J'}), ('e', 'u'): (454, {'C', 'K', 'J'}),
             ('e', 'm'): (482, {'C', 'K', 'F', 'J'}), ('e', 'a'): (506, {'C', 'K', 'F', 'J'}),
             ('e', 'l'): (536, {'C', 'K', 'F', 'J'}), ('e', 'g'): (554, {'C', 'K', 'F', 'J'}),
             ('e', 's'): (520, {'C', 'K', 'F', 'J'}), ('e', 'z'): (128, {'C', 'K'}), ('e', 'v'): (166, {'C', 'K'}),
             ('e', 'y'): (212, {'C', 'K', 'T'}), ('e', 'x'): (338, {'B', 'H', 'K', 'R', 'T', 'C'}),
             ('e', 'p'): (478, {'A', 'G', 'S', 'R', 'T', 'C', 'M', 'B', 'H', 'K', 'L'}),
             ('f', 'c'): (342, {'Y', 'U', 'V', 'D', 'Q'}), ('f', 'o'): (342, {'Y', 'U', 'V', 'D', 'Q'}),
             ('f', 'j'): (422, {'O', 'N', 'Y', 'U', 'V', 'D', 'Q'}), ('f', 'i'): (508, {'O', 'Y', 'U', 'V', 'D', 'Q'}),
             ('f', 'q'): (576, {'O', 'Y', 'U', 'V', 'D', 'Q'}), ('f', 'd'): (594, {'O', 'Y', 'U', 'V', 'D', 'Q'}),
             ('f', 'r'): (562, {'Y', 'U', 'E', 'V', 'D', 'Q'}), ('f', '@'): (356, {'Y', 'U', 'V', 'D', 'Q'}),
             ('f', 'e'): (478, {'Y', 'U', 'K', 'V', 'D', 'Q', 'C'}), ('f', 'z'): (462, {'Y', 'U', 'V', 'D', 'Q'}),
             ('f', 'v'): (500, {'Y', 'U', 'V', 'D', 'Q'}), ('f', 'y'): (546, {'Y', 'U', 'T', 'V', 'D', 'Q'}),
             ('f', 'x'): (672, {'Y', 'R', 'T', 'Q', 'B', 'H', 'V', 'D', 'U'}),
             ('f', 'p'): (812, {'A', 'G', 'Y', 'R', 'T', 'M', 'S', 'Q', 'B', 'H', 'V', 'L', 'D', 'U'}),
             ('f', 'n'): (384, {'Y', 'U', 'V', 'D', 'Q'}), ('f', 'k'): (402, {'Y', 'U', 'V', 'D', 'Q'}),
             ('f', 'w'): (616, {'Y', 'U', 'J', 'V', 'D', 'Q'}), ('f', 'b'): (652, {'Y', 'U', 'J', 'V', 'D', 'Q'}),
             ('f', 'u'): (692, {'Y', 'U', 'J', 'V', 'D', 'Q'}), ('f', 'm'): (720, {'F', 'Y', 'U', 'J', 'V', 'D', 'Q'}),
             ('f', 'a'): (744, {'F', 'Y', 'U', 'J', 'V', 'D', 'Q'}),
             ('f', 'l'): (774, {'F', 'Y', 'U', 'J', 'V', 'D', 'Q'}),
             ('f', 'g'): (792, {'F', 'Y', 'U', 'J', 'V', 'D', 'Q'}),
             ('f', 's'): (758, {'F', 'Y', 'U', 'J', 'V', 'D', 'Q'}), ('f', 't'): (252, {'Y', 'U', 'V', 'D', 'Q', 'I'}),
             ('f', 'h'): (170, {'Q', 'D', 'U'}), ('g', 'l'): (18, set()), ('g', 's'): (42, set()),
             ('g', 'a'): (48, set()), ('g', 'm'): (72, set()), ('g', 'u'): (100, {'F'}), ('g', 'w'): (176, {'F'}),
             ('g', 'k'): (390, {'J', 'F'}), ('g', 'n'): (408, {'J', 'F'}), ('g', 'e'): (554, {'K', 'J', 'F', 'C'}),
             ('g', 'z'): (538, {'J', 'F'}), ('g', 'v'): (576, {'J', 'F'}), ('g', 'y'): (622, {'J', 'F', 'T'}),
             ('g', 'x'): (748, {'B', 'H', 'F', 'R', 'T', 'J'}),
             ('g', 'p'): (888, {'A', 'F', 'S', 'R', 'T', 'M', 'G', 'B', 'H', 'J', 'L'}), ('g', '@'): (438, {'J', 'F'}),
             ('g', 'j'): (510, {'O', 'J', 'N', 'F'}), ('g', 'i'): (596, {'O', 'J', 'F'}),
             ('g', 'q'): (664, {'O', 'J', 'F'}), ('g', 'd'): (682, {'O', 'J', 'F'}), ('g', 'r'): (650, {'J', 'F', 'E'}),
             ('g', 't'): (608, {'J', 'F', 'I'}), ('g', 'f'): (792, {'F', 'Y', 'U', 'J', 'V', 'D', 'Q'}),
             ('g', 'h'): (722, {'Y', 'J', 'F', 'V'}), ('g', 'c'): (526, {'J', 'F'}), ('g', 'o'): (454, {'J', 'F'}),
             ('g', 'b'): (184, {'F'}), ('h', 'f'): (170, {'U', 'D', 'Q'}), ('h', 'c'): (272, {'V', 'Y'}),
             ('h', 'o'): (272, {'V', 'Y'}), ('h', 'j'): (352, {'O', 'V', 'N', 'Y'}), ('h', 'i'): (438, {'O', 'V', 'Y'}),
             ('h', 'q'): (506, {'O', 'V', 'Y'}), ('h', 'd'): (524, {'O', 'V', 'Y'}), ('h', 'r'): (492, {'V', 'Y', 'E'}),
             ('h', '@'): (286, {'V', 'Y'}), ('h', 'e'): (408, {'K', 'V', 'Y', 'C'}), ('h', 'z'): (392, {'V', 'Y'}),
             ('h', 'v'): (430, {'V', 'Y'}), ('h', 'y'): (476, {'V', 'Y', 'T'}),
             ('h', 'x'): (602, {'B', 'H', 'Y', 'R', 'T', 'V'}),
             ('h', 'p'): (742, {'A', 'G', 'Y', 'R', 'T', 'M', 'S', 'B', 'H', 'V', 'L'}), ('h', 'n'): (314, {'V', 'Y'}),
             ('h', 'k'): (332, {'V', 'Y'}), ('h', 'w'): (546, {'J', 'V', 'Y'}), ('h', 'b'): (582, {'J', 'V', 'Y'}),
             ('h', 'u'): (622, {'J', 'V', 'Y'}), ('h', 'm'): (650, {'J', 'V', 'F', 'Y'}),
             ('h', 'a'): (674, {'J', 'V', 'F', 'Y'}), ('h', 'l'): (704, {'J', 'V', 'F', 'Y'}),
             ('h', 'g'): (722, {'J', 'V', 'F', 'Y'}), ('h', 's'): (688, {'J', 'V', 'F', 'Y'}),
             ('h', 't'): (182, {'V', 'Y', 'I'}), ('i', 'j'): (174, {'N'}), ('i', 'r'): (354, {'O', 'E'}),
             ('i', 't'): (324, {'O', 'I'}), ('i', 'f'): (508, {'O', 'Y', 'U', 'V', 'D', 'Q'}),
             ('i', 'h'): (438, {'O', 'V', 'Y'}), ('i', 'c'): (242, {'O'}), ('i', 'o'): (170, {'O'}),
             ('i', '@'): (158, {'O'}), ('i', 'e'): (278, {'O', 'K', 'C'}), ('i', 'z'): (262, {'O'}),
             ('i', 'v'): (300, {'O'}), ('i', 'y'): (346, {'O', 'T'}), ('i', 'x'): (472, {'O', 'B', 'H', 'R', 'T'}),
             ('i', 'p'): (612, {'A', 'G', 'S', 'R', 'T', 'M', 'O', 'B', 'H', 'L'}), ('i', 'n'): (188, {'O'}),
             ('i', 'k'): (206, {'O'}), ('i', 'w'): (420, {'O', 'J'}), ('i', 'b'): (456, {'O', 'J'}),
             ('i', 'u'): (496, {'O', 'J'}), ('i', 'm'): (524, {'O', 'J', 'F'}), ('i', 'a'): (548, {'O', 'J', 'F'}),
             ('i', 'l'): (578, {'O', 'J', 'F'}), ('i', 'g'): (596, {'O', 'J', 'F'}), ('i', 's'): (562, {'O', 'J', 'F'}),
             ('i', 'q'): (112, set()), ('i', 'd'): (130, set()), ('j', 'r'): (268, {'O', 'N', 'E'}),
             ('j', 't'): (238, {'O', 'N', 'I'}), ('j', 'f'): (422, {'O', 'N', 'Y', 'U', 'V', 'D', 'Q'}),
             ('j', 'h'): (352, {'O', 'V', 'N', 'Y'}), ('j', 'c'): (156, {'O', 'N'}), ('j', 'o'): (84, {'O', 'N'}),
             ('j', '@'): (72, {'O', 'N'}), ('j', 'e'): (192, {'O', 'K', 'N', 'C'}), ('j', 'z'): (176, {'O', 'N'}),
             ('j', 'v'): (214, {'O', 'N'}), ('j', 'y'): (260, {'O', 'N', 'T'}),
             ('j', 'x'): (386, {'O', 'B', 'H', 'N', 'R', 'T'}),
             ('j', 'p'): (526, {'A', 'N', 'G', 'S', 'R', 'T', 'M', 'O', 'B', 'H', 'L'}), ('j', 'n'): (102, {'O', 'N'}),
             ('j', 'k'): (120, {'O', 'N'}), ('j', 'w'): (334, {'O', 'J', 'N'}), ('j', 'b'): (370, {'O', 'J', 'N'}),
             ('j', 'u'): (410, {'O', 'J', 'N'}), ('j', 'm'): (438, {'O', 'J', 'N', 'F'}),
             ('j', 'a'): (462, {'O', 'J', 'N', 'F'}), ('j', 'l'): (492, {'O', 'J', 'N', 'F'}),
             ('j', 'g'): (510, {'O', 'J', 'N', 'F'}), ('j', 's'): (476, {'O', 'J', 'N', 'F'}), ('j', 'i'): (174, {'N'}),
             ('j', 'q'): (242, {'N'}), ('j', 'd'): (260, {'N'}), ('k', 'n'): (18, set()), ('k', 'e'): (164, {'K', 'C'}),
             ('k', 'z'): (148, set()), ('k', 'v'): (186, set()), ('k', 'y'): (232, {'T'}),
             ('k', 'x'): (358, {'B', 'H', 'R', 'T'}), ('k', 'p'): (498, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'L'}),
             ('k', '@'): (48, set()), ('k', 'j'): (120, {'O', 'N'}), ('k', 'i'): (206, {'O'}), ('k', 'q'): (274, {'O'}),
             ('k', 'd'): (292, {'O'}), ('k', 'r'): (260, {'E'}), ('k', 't'): (218, {'I'}),
             ('k', 'f'): (402, {'Y', 'U', 'V', 'D', 'Q'}), ('k', 'h'): (332, {'V', 'Y'}), ('k', 'c'): (136, set()),
             ('k', 'o'): (64, set()), ('k', 'w'): (214, {'J'}), ('k', 'b'): (250, {'J'}), ('k', 'u'): (290, {'J'}),
             ('k', 'm'): (318, {'J', 'F'}), ('k', 'a'): (342, {'J', 'F'}), ('k', 'l'): (372, {'J', 'F'}),
             ('k', 'g'): (390, {'J', 'F'}), ('k', 's'): (356, {'J', 'F'}), ('l', 'g'): (18, set()),
             ('l', 's'): (24, set()), ('l', 'a'): (30, set()), ('l', 'm'): (54, set()), ('l', 'u'): (82, {'F'}),
             ('l', 'w'): (158, {'F'}), ('l', 'k'): (372, {'J', 'F'}), ('l', 'n'): (390, {'J', 'F'}),
             ('l', 'e'): (536, {'K', 'J', 'F', 'C'}), ('l', 'z'): (520, {'J', 'F'}), ('l', 'v'): (558, {'J', 'F'}),
             ('l', 'y'): (604, {'J', 'F', 'T'}), ('l', 'x'): (730, {'B', 'H', 'F', 'R', 'T', 'J'}),
             ('l', 'p'): (870, {'A', 'F', 'S', 'R', 'T', 'M', 'G', 'B', 'H', 'J', 'L'}), ('l', '@'): (420, {'J', 'F'}),
             ('l', 'j'): (492, {'O', 'J', 'N', 'F'}), ('l', 'i'): (578, {'O', 'J', 'F'}),
             ('l', 'q'): (646, {'O', 'J', 'F'}), ('l', 'd'): (664, {'O', 'J', 'F'}), ('l', 'r'): (632, {'J', 'F', 'E'}),
             ('l', 't'): (590, {'J', 'F', 'I'}), ('l', 'f'): (774, {'F', 'Y', 'U', 'J', 'V', 'D', 'Q'}),
             ('l', 'h'): (704, {'Y', 'J', 'F', 'V'}), ('l', 'c'): (508, {'J', 'F'}), ('l', 'o'): (436, {'J', 'F'}),
             ('l', 'b'): (166, {'F'}), ('m', 'a'): (24, set()), ('m', 'l'): (54, set()), ('m', 'g'): (72, set()),
             ('m', 's'): (38, set()), ('m', 'u'): (28, {'F'}), ('m', 'w'): (104, {'F'}), ('m', 'k'): (318, {'J', 'F'}),
             ('m', 'n'): (336, {'J', 'F'}), ('m', 'e'): (482, {'K', 'J', 'F', 'C'}), ('m', 'z'): (466, {'J', 'F'}),
             ('m', 'v'): (504, {'J', 'F'}), ('m', 'y'): (550, {'J', 'F', 'T'}),
             ('m', 'x'): (676, {'B', 'H', 'F', 'R', 'T', 'J'}),
             ('m', 'p'): (816, {'A', 'F', 'S', 'R', 'T', 'M', 'G', 'B', 'H', 'J', 'L'}), ('m', '@'): (366, {'J', 'F'}),
             ('m', 'j'): (438, {'O', 'J', 'N', 'F'}), ('m', 'i'): (524, {'O', 'J', 'F'}),
             ('m', 'q'): (592, {'O', 'J', 'F'}), ('m', 'd'): (610, {'O', 'J', 'F'}), ('m', 'r'): (578, {'J', 'F', 'E'}),
             ('m', 't'): (536, {'J', 'F', 'I'}), ('m', 'f'): (720, {'F', 'Y', 'U', 'J', 'V', 'D', 'Q'}),
             ('m', 'h'): (650, {'Y', 'J', 'F', 'V'}), ('m', 'c'): (454, {'J', 'F'}), ('m', 'o'): (382, {'J', 'F'}),
             ('m', 'b'): (112, {'F'}), ('n', 'k'): (18, set()), ('n', 'w'): (232, {'J'}), ('n', 'b'): (268, {'J'}),
             ('n', 'u'): (308, {'J'}), ('n', 'm'): (336, {'J', 'F'}), ('n', 'a'): (360, {'J', 'F'}),
             ('n', 'l'): (390, {'J', 'F'}), ('n', 'g'): (408, {'J', 'F'}), ('n', 's'): (374, {'J', 'F'}),
             ('n', 'e'): (146, {'K', 'C'}), ('n', 'z'): (130, set()), ('n', 'v'): (168, set()),
             ('n', 'y'): (214, {'T'}), ('n', 'x'): (340, {'B', 'H', 'R', 'T'}),
             ('n', 'p'): (480, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'L'}), ('n', '@'): (30, set()),
             ('n', 'j'): (102, {'O', 'N'}), ('n', 'i'): (188, {'O'}), ('n', 'q'): (256, {'O'}),
             ('n', 'd'): (274, {'O'}), ('n', 'r'): (242, {'E'}), ('n', 't'): (200, {'I'}),
             ('n', 'f'): (384, {'Y', 'U', 'V', 'D', 'Q'}), ('n', 'h'): (314, {'V', 'Y'}), ('n', 'c'): (118, set()),
             ('n', 'o'): (46, set()), ('o', 't'): (158, {'I'}), ('o', 'f'): (342, {'Y', 'U', 'V', 'D', 'Q'}),
             ('o', 'h'): (272, {'V', 'Y'}), ('o', 'c'): (76, set()), ('o', 'j'): (84, {'O', 'N'}),
             ('o', 'i'): (170, {'O'}), ('o', 'q'): (238, {'O'}), ('o', 'd'): (256, {'O'}), ('o', 'r'): (224, {'E'}),
             ('o', '@'): (18, set()), ('o', 'e'): (140, {'K', 'C'}), ('o', 'z'): (124, set()), ('o', 'v'): (162, set()),
             ('o', 'y'): (208, {'T'}), ('o', 'x'): (334, {'B', 'H', 'R', 'T'}),
             ('o', 'p'): (474, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'L'}), ('o', 'n'): (46, set()),
             ('o', 'k'): (64, set()), ('o', 'w'): (278, {'J'}), ('o', 'b'): (314, {'J'}), ('o', 'u'): (354, {'J'}),
             ('o', 'm'): (382, {'J', 'F'}), ('o', 'a'): (406, {'J', 'F'}), ('o', 'l'): (436, {'J', 'F'}),
             ('o', 'g'): (454, {'J', 'F'}), ('o', 's'): (420, {'J', 'F'}), ('p', 'x'): (140, {'A', 'G', 'S', 'M', 'L'}),
             ('p', 'y'): (266, {'A', 'G', 'S', 'M', 'R', 'B', 'H', 'L'}),
             ('p', 'v'): (312, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'L'}),
             ('p', 'z'): (350, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'L'}),
             ('p', 'e'): (478, {'A', 'G', 'S', 'M', 'R', 'T', 'C', 'B', 'H', 'K', 'L'}),
             ('p', '@'): (456, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'L'}),
             ('p', 't'): (628, {'A', 'G', 'S', 'M', 'R', 'T', 'I', 'B', 'H', 'L'}),
             ('p', 'f'): (812, {'A', 'G', 'S', 'M', 'R', 'T', 'Y', 'Q', 'B', 'H', 'V', 'L', 'D', 'U'}),
             ('p', 'h'): (742, {'A', 'G', 'S', 'M', 'R', 'T', 'Y', 'B', 'H', 'V', 'L'}),
             ('p', 'c'): (546, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'L'}),
             ('p', 'o'): (474, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'L'}),
             ('p', 'j'): (526, {'A', 'N', 'G', 'S', 'M', 'R', 'T', 'O', 'B', 'H', 'L'}),
             ('p', 'i'): (612, {'A', 'G', 'S', 'M', 'R', 'T', 'O', 'B', 'H', 'L'}),
             ('p', 'q'): (680, {'A', 'G', 'S', 'M', 'R', 'T', 'O', 'B', 'H', 'L'}),
             ('p', 'd'): (698, {'A', 'G', 'S', 'M', 'R', 'T', 'O', 'B', 'H', 'L'}),
             ('p', 'r'): (666, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'E', 'L'}),
             ('p', 'n'): (480, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'L'}),
             ('p', 'k'): (498, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'L'}),
             ('p', 'w'): (712, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'J', 'L'}),
             ('p', 'b'): (748, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'J', 'L'}),
             ('p', 'u'): (788, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'J', 'L'}),
             ('p', 'm'): (816, {'A', 'G', 'S', 'M', 'R', 'T', 'F', 'B', 'H', 'J', 'L'}),
             ('p', 'a'): (840, {'A', 'G', 'S', 'M', 'R', 'T', 'F', 'B', 'H', 'J', 'L'}),
             ('p', 'l'): (870, {'A', 'G', 'S', 'M', 'R', 'T', 'F', 'B', 'H', 'J', 'L'}),
             ('p', 'g'): (888, {'A', 'G', 'S', 'M', 'R', 'T', 'F', 'B', 'H', 'J', 'L'}),
             ('p', 's'): (854, {'A', 'G', 'S', 'M', 'R', 'T', 'F', 'B', 'H', 'J', 'L'}), ('q', 'd'): (18, set()),
             ('q', 'i'): (112, set()), ('q', 'j'): (242, {'N'}), ('q', 'r'): (422, {'O', 'E'}),
             ('q', 't'): (392, {'O', 'I'}), ('q', 'f'): (576, {'O', 'Y', 'U', 'V', 'D', 'Q'}),
             ('q', 'h'): (506, {'O', 'V', 'Y'}), ('q', 'c'): (310, {'O'}), ('q', 'o'): (238, {'O'}),
             ('q', '@'): (226, {'O'}), ('q', 'e'): (346, {'O', 'K', 'C'}), ('q', 'z'): (330, {'O'}),
             ('q', 'v'): (368, {'O'}), ('q', 'y'): (414, {'O', 'T'}), ('q', 'x'): (540, {'O', 'B', 'H', 'R', 'T'}),
             ('q', 'p'): (680, {'A', 'G', 'S', 'R', 'T', 'M', 'O', 'B', 'H', 'L'}), ('q', 'n'): (256, {'O'}),
             ('q', 'k'): (274, {'O'}), ('q', 'w'): (488, {'O', 'J'}), ('q', 'b'): (524, {'O', 'J'}),
             ('q', 'u'): (564, {'O', 'J'}), ('q', 'm'): (592, {'O', 'J', 'F'}), ('q', 'a'): (616, {'O', 'J', 'F'}),
             ('q', 'l'): (646, {'O', 'J', 'F'}), ('q', 'g'): (664, {'O', 'J', 'F'}), ('q', 's'): (630, {'O', 'J', 'F'}),
             ('r', 'j'): (268, {'O', 'N', 'E'}), ('r', 'i'): (354, {'O', 'E'}), ('r', 'q'): (422, {'O', 'E'}),
             ('r', 'd'): (440, {'O', 'E'}), ('r', 't'): (378, {'I', 'E'}),
             ('r', 'f'): (562, {'Y', 'U', 'E', 'V', 'D', 'Q'}), ('r', 'h'): (492, {'V', 'Y', 'E'}),
             ('r', 'c'): (296, {'E'}), ('r', 'o'): (224, {'E'}), ('r', '@'): (212, {'E'}),
             ('r', 'e'): (332, {'K', 'C', 'E'}), ('r', 'z'): (316, {'E'}), ('r', 'v'): (354, {'E'}),
             ('r', 'y'): (400, {'T', 'E'}), ('r', 'x'): (526, {'B', 'H', 'E', 'R', 'T'}),
             ('r', 'p'): (666, {'A', 'G', 'S', 'R', 'T', 'M', 'B', 'H', 'E', 'L'}), ('r', 'n'): (242, {'E'}),
             ('r', 'k'): (260, {'E'}), ('r', 'w'): (474, {'J', 'E'}), ('r', 'b'): (510, {'J', 'E'}),
             ('r', 'u'): (550, {'J', 'E'}), ('r', 'm'): (578, {'J', 'F', 'E'}), ('r', 'a'): (602, {'J', 'F', 'E'}),
             ('r', 'l'): (632, {'J', 'F', 'E'}), ('r', 'g'): (650, {'J', 'F', 'E'}), ('r', 's'): (616, {'J', 'F', 'E'}),
             ('s', 'l'): (24, set()), ('s', 'g'): (42, set()), ('s', 'a'): (14, set()), ('s', 'm'): (38, set()),
             ('s', 'u'): (66, {'F'}), ('s', 'w'): (142, {'F'}), ('s', 'k'): (356, {'J', 'F'}),
             ('s', 'n'): (374, {'J', 'F'}), ('s', 'e'): (520, {'K', 'J', 'F', 'C'}), ('s', 'z'): (504, {'J', 'F'}),
             ('s', 'v'): (542, {'J', 'F'}), ('s', 'y'): (588, {'J', 'F', 'T'}),
             ('s', 'x'): (714, {'B', 'H', 'F', 'R', 'T', 'J'}),
             ('s', 'p'): (854, {'A', 'F', 'S', 'R', 'T', 'M', 'G', 'B', 'H', 'J', 'L'}), ('s', '@'): (404, {'J', 'F'}),
             ('s', 'j'): (476, {'O', 'J', 'N', 'F'}), ('s', 'i'): (562, {'O', 'J', 'F'}),
             ('s', 'q'): (630, {'O', 'J', 'F'}), ('s', 'd'): (648, {'O', 'J', 'F'}), ('s', 'r'): (616, {'J', 'F', 'E'}),
             ('s', 't'): (574, {'J', 'F', 'I'}), ('s', 'f'): (758, {'F', 'Y', 'U', 'J', 'V', 'D', 'Q'}),
             ('s', 'h'): (688, {'Y', 'J', 'F', 'V'}), ('s', 'c'): (492, {'J', 'F'}), ('s', 'o'): (420, {'J', 'F'}),
             ('s', 'b'): (150, {'F'}), ('t', 'c'): (158, {'I'}), ('t', 'o'): (158, {'I'}),
             ('t', 'j'): (238, {'O', 'N', 'I'}), ('t', 'i'): (324, {'O', 'I'}), ('t', 'q'): (392, {'O', 'I'}),
             ('t', 'd'): (410, {'O', 'I'}), ('t', 'r'): (378, {'I', 'E'}), ('t', '@'): (172, {'I'}),
             ('t', 'e'): (294, {'K', 'I', 'C'}), ('t', 'z'): (278, {'I'}), ('t', 'v'): (316, {'I'}),
             ('t', 'y'): (362, {'I', 'T'}), ('t', 'x'): (488, {'B', 'H', 'R', 'T', 'I'}),
             ('t', 'p'): (628, {'A', 'G', 'S', 'R', 'T', 'M', 'I', 'B', 'H', 'L'}), ('t', 'n'): (200, {'I'}),
             ('t', 'k'): (218, {'I'}), ('t', 'w'): (432, {'J', 'I'}), ('t', 'b'): (468, {'J', 'I'}),
             ('t', 'u'): (508, {'J', 'I'}), ('t', 'm'): (536, {'J', 'F', 'I'}), ('t', 'a'): (560, {'J', 'F', 'I'}),
             ('t', 'l'): (590, {'J', 'F', 'I'}), ('t', 'g'): (608, {'J', 'F', 'I'}), ('t', 's'): (574, {'J', 'F', 'I'}),
             ('t', 'f'): (252, {'Y', 'U', 'V', 'D', 'Q', 'I'}), ('t', 'h'): (182, {'V', 'Y', 'I'}),
             ('u', 'm'): (28, {'F'}), ('u', 'a'): (52, {'F'}), ('u', 'l'): (82, {'F'}), ('u', 'g'): (100, {'F'}),
             ('u', 's'): (66, {'F'}), ('u', 'w'): (76, set()), ('u', 'k'): (290, {'J'}), ('u', 'n'): (308, {'J'}),
             ('u', 'e'): (454, {'K', 'J', 'C'}), ('u', 'z'): (438, {'J'}), ('u', 'v'): (476, {'J'}),
             ('u', 'y'): (522, {'J', 'T'}), ('u', 'x'): (648, {'B', 'H', 'R', 'T', 'J'}),
             ('u', 'p'): (788, {'A', 'G', 'S', 'R', 'T', 'M', 'B', 'H', 'J', 'L'}), ('u', '@'): (338, {'J'}),
             ('u', 'j'): (410, {'O', 'J', 'N'}), ('u', 'i'): (496, {'O', 'J'}), ('u', 'q'): (564, {'O', 'J'}),
             ('u', 'd'): (582, {'O', 'J'}), ('u', 'r'): (550, {'J', 'E'}), ('u', 't'): (508, {'J', 'I'}),
             ('u', 'f'): (692, {'Y', 'U', 'J', 'V', 'D', 'Q'}), ('u', 'h'): (622, {'Y', 'J', 'V'}),
             ('u', 'c'): (426, {'J'}), ('u', 'o'): (354, {'J'}), ('u', 'b'): (84, set()), ('v', 'z'): (38, set()),
             ('v', 'e'): (166, {'K', 'C'}), ('v', '@'): (144, set()), ('v', 't'): (316, {'I'}),
             ('v', 'f'): (500, {'Y', 'U', 'V', 'D', 'Q'}), ('v', 'h'): (430, {'V', 'Y'}), ('v', 'c'): (234, set()),
             ('v', 'o'): (162, set()), ('v', 'j'): (214, {'O', 'N'}), ('v', 'i'): (300, {'O'}),
             ('v', 'q'): (368, {'O'}), ('v', 'd'): (386, {'O'}), ('v', 'r'): (354, {'E'}), ('v', 'n'): (168, set()),
             ('v', 'k'): (186, set()), ('v', 'w'): (400, {'J'}), ('v', 'b'): (436, {'J'}), ('v', 'u'): (476, {'J'}),
             ('v', 'm'): (504, {'J', 'F'}), ('v', 'a'): (528, {'J', 'F'}), ('v', 'l'): (558, {'J', 'F'}),
             ('v', 'g'): (576, {'J', 'F'}), ('v', 's'): (542, {'J', 'F'}), ('v', 'y'): (46, {'T'}),
             ('v', 'x'): (172, {'B', 'H', 'R', 'T'}), ('v', 'p'): (312, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'L'}),
             ('w', 'k'): (214, {'J'}), ('w', 'n'): (232, {'J'}), ('w', 'e'): (378, {'K', 'J', 'C'}),
             ('w', 'z'): (362, {'J'}), ('w', 'v'): (400, {'J'}), ('w', 'y'): (446, {'J', 'T'}),
             ('w', 'x'): (572, {'B', 'H', 'R', 'T', 'J'}),
             ('w', 'p'): (712, {'A', 'G', 'S', 'R', 'T', 'M', 'B', 'H', 'J', 'L'}), ('w', '@'): (262, {'J'}),
             ('w', 'j'): (334, {'O', 'J', 'N'}), ('w', 'i'): (420, {'O', 'J'}), ('w', 'q'): (488, {'O', 'J'}),
             ('w', 'd'): (506, {'O', 'J'}), ('w', 'r'): (474, {'J', 'E'}), ('w', 't'): (432, {'J', 'I'}),
             ('w', 'f'): (616, {'Y', 'U', 'J', 'V', 'D', 'Q'}), ('w', 'h'): (546, {'Y', 'J', 'V'}),
             ('w', 'c'): (350, {'J'}), ('w', 'o'): (278, {'J'}), ('w', 'b'): (36, set()), ('w', 'u'): (76, set()),
             ('w', 'm'): (104, {'F'}), ('w', 'a'): (128, {'F'}), ('w', 'l'): (158, {'F'}), ('w', 'g'): (176, {'F'}),
             ('w', 's'): (142, {'F'}), ('x', 'y'): (126, {'B', 'H', 'R'}), ('x', 'v'): (172, {'B', 'H', 'R', 'T'}),
             ('x', 'z'): (210, {'B', 'H', 'R', 'T'}), ('x', 'e'): (338, {'B', 'H', 'R', 'T', 'K', 'C'}),
             ('x', '@'): (316, {'B', 'H', 'R', 'T'}), ('x', 't'): (488, {'B', 'H', 'R', 'T', 'I'}),
             ('x', 'f'): (672, {'Y', 'R', 'T', 'Q', 'B', 'H', 'V', 'D', 'U'}),
             ('x', 'h'): (602, {'B', 'H', 'Y', 'R', 'T', 'V'}), ('x', 'c'): (406, {'B', 'H', 'R', 'T'}),
             ('x', 'o'): (334, {'B', 'H', 'R', 'T'}), ('x', 'j'): (386, {'O', 'B', 'H', 'N', 'R', 'T'}),
             ('x', 'i'): (472, {'O', 'B', 'H', 'R', 'T'}), ('x', 'q'): (540, {'O', 'B', 'H', 'R', 'T'}),
             ('x', 'd'): (558, {'O', 'B', 'H', 'R', 'T'}), ('x', 'r'): (526, {'B', 'H', 'E', 'R', 'T'}),
             ('x', 'n'): (340, {'B', 'H', 'R', 'T'}), ('x', 'k'): (358, {'B', 'H', 'R', 'T'}),
             ('x', 'w'): (572, {'B', 'H', 'R', 'T', 'J'}), ('x', 'b'): (608, {'B', 'H', 'R', 'T', 'J'}),
             ('x', 'u'): (648, {'B', 'H', 'R', 'T', 'J'}), ('x', 'm'): (676, {'B', 'H', 'F', 'R', 'T', 'J'}),
             ('x', 'a'): (700, {'B', 'H', 'F', 'R', 'T', 'J'}), ('x', 'l'): (730, {'B', 'H', 'F', 'R', 'T', 'J'}),
             ('x', 'g'): (748, {'B', 'H', 'F', 'R', 'T', 'J'}), ('x', 's'): (714, {'B', 'H', 'F', 'R', 'T', 'J'}),
             ('x', 'p'): (140, {'A', 'G', 'S', 'M', 'L'}), ('y', 'v'): (46, {'T'}), ('y', 'z'): (84, {'T'}),
             ('y', 'e'): (212, {'K', 'C', 'T'}), ('y', '@'): (190, {'T'}), ('y', 't'): (362, {'I', 'T'}),
             ('y', 'f'): (546, {'Y', 'U', 'T', 'V', 'D', 'Q'}), ('y', 'h'): (476, {'V', 'Y', 'T'}),
             ('y', 'c'): (280, {'T'}), ('y', 'o'): (208, {'T'}), ('y', 'j'): (260, {'O', 'N', 'T'}),
             ('y', 'i'): (346, {'O', 'T'}), ('y', 'q'): (414, {'O', 'T'}), ('y', 'd'): (432, {'O', 'T'}),
             ('y', 'r'): (400, {'E', 'T'}), ('y', 'n'): (214, {'T'}), ('y', 'k'): (232, {'T'}),
             ('y', 'w'): (446, {'J', 'T'}), ('y', 'b'): (482, {'J', 'T'}), ('y', 'u'): (522, {'J', 'T'}),
             ('y', 'm'): (550, {'J', 'F', 'T'}), ('y', 'a'): (574, {'J', 'F', 'T'}), ('y', 'l'): (604, {'J', 'F', 'T'}),
             ('y', 'g'): (622, {'J', 'F', 'T'}), ('y', 's'): (588, {'J', 'F', 'T'}), ('y', 'x'): (126, {'B', 'H', 'R'}),
             ('y', 'p'): (266, {'A', 'G', 'S', 'M', 'R', 'B', 'H', 'L'}), ('z', 'v'): (38, set()),
             ('z', 'y'): (84, {'T'}), ('z', 'x'): (210, {'B', 'H', 'R', 'T'}),
             ('z', 'p'): (350, {'A', 'G', 'S', 'M', 'R', 'T', 'B', 'H', 'L'}), ('z', 'e'): (128, {'K', 'C'}),
             ('z', '@'): (106, set()), ('z', 't'): (278, {'I'}), ('z', 'f'): (462, {'Y', 'U', 'V', 'D', 'Q'}),
             ('z', 'h'): (392, {'V', 'Y'}), ('z', 'c'): (196, set()), ('z', 'o'): (124, set()),
             ('z', 'j'): (176, {'O', 'N'}), ('z', 'i'): (262, {'O'}), ('z', 'q'): (330, {'O'}),
             ('z', 'd'): (348, {'O'}), ('z', 'r'): (316, {'E'}), ('z', 'n'): (130, set()), ('z', 'k'): (148, set()),
             ('z', 'w'): (362, {'J'}), ('z', 'b'): (398, {'J'}), ('z', 'u'): (438, {'J'}),
             ('z', 'm'): (466, {'J', 'F'}), ('z', 'a'): (490, {'J', 'F'}), ('z', 'l'): (520, {'J', 'F'}),
             ('z', 'g'): (538, {'J', 'F'}), ('z', 's'): (504, {'J', 'F'})}

# starting_keys = {'c', 'k', 'n', 'o', 'v', 'z'}
starting_keys = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'}
# starting_keys = {'a', 'd', 'e', 'f'}
# starting_keys = {'a'}


def fill_dict(key, index, visited, length, doors, passed_keys):
    visited.add(index)
    if data[index] in key_states and data[index] != key:
        if key not in path_dict:
            path_dict[key] = {data[index]: (length, doors, passed_keys)}
        elif data[index] not in path_dict[key] or path_dict[key][data[index]][0] > length:  # and (
            # data[index], key) not in path_dict:
            # path_dict[(key, data[index])] = (length, doors)
            path_dict[key][data[index]] = (length, doors, passed_keys)
    # return
    passed_keys_new = passed_keys.copy()
    if data[index].islower() and data[index] != key:
        passed_keys_new.add(data[index])
    elif data[index].isupper():
        doors.add(data[index].lower())
    if index // C > 0 and data[index - C] != '#' and index - C not in visited:
        fill_dict(key, index - C, visited.copy(), length + 1, doors.copy(), passed_keys_new.copy())
    if index // C < C - 1 and data[index + C] != '#' and index + C not in visited:
        fill_dict(key, index + C, visited.copy(), length + 1, doors.copy(), passed_keys_new.copy())
    if index % C > 0 and data[index - 1] != '#' and index - 1 not in visited:
        fill_dict(key, index - 1, visited.copy(), length + 1, doors.copy(), passed_keys_new.copy())
    if index % C < C - 1 and data[index + 1] != '#' and index + 1 not in visited:
        fill_dict(key, index + 1, visited.copy(), length + 1, doors.copy(), passed_keys_new.copy())


def shortest_path(key, prev, visited, collected):
    visited.add(key)
    collected.add(key)
    if len(collected) == len(key_states):
        return path_dict[prev][key][0]
    pq = []
    for k, val in path_dict[key].items():
        if k not in visited and val[1].issubset(collected):
            heappush(pq, (val[0], val[2], k))
    minimum = float('inf')
    while pq:
        temp = heappop(pq)
        if minimum < temp[0]:
            continue
        minimum = min(minimum, shortest_path(temp[2], key, visited.copy().union(temp[1]), collected.copy()))
    return minimum + path_dict[prev][key][0]


def shortest_path_2(index, visited, key_state):
    if data[index].islower():  # key
        print(data[index])
        key_state[data[index]] = 0
        if 1 not in key_state.values():
            return 0
    elif data[index].isupper() and key_state[data[index].lower()]:  # or index in visited:	# locked door
        return float('inf')
    visited.add(index)
    move_list = []
    print(index, key_state)
    if index // 7 > 0 and data[index - 7] != '#' and index - 7 not in visited:
        move_list.append(shortest_path_2(index - 7, visited.copy(), key_state.copy()))
    if index // 7 < 7 and data[index + 7] != '#' and index + 7 not in visited:
        move_list.append(shortest_path_2(index + 7, visited.copy(), key_state.copy()))
    if index % 7 > 0 and data[index - 1] != '#' and index - 1 not in visited:
        move_list.append(shortest_path_2(index - 1, visited.copy(), key_state.copy()))
    if index % 7 < 7 and data[index + 1] != '#' and index + 1 not in visited:
        move_list.append(shortest_path_2(index + 1, visited.copy(), key_state.copy()))
    if not move_list:
        return float('inf')
    return 1 + min(move_list)


count = 0
for i in data:
    if i.isalpha() and i.islower():
        count += 1
# print(count)
path_dict.clear()
for a in key_states:  # creating path_dict. Saved it as a variable from the output of this code
    # print(a)
    fill_dict(a, data.index(a), set(), 0, set(), set())
print(path_dict)
# print(len(path_dict))
minimum_path = float('inf')
for start in starting_keys:
    print(start)
    minimum_path = min(minimum_path, shortest_path(start, '@', {'@'}, {'@'}))
print(minimum_path)
# print(shortest_path(data.index('@'), set(), key_states))
